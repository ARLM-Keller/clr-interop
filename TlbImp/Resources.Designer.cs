//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TlbImp2 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TlbImp2.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous option: /{0}.
        /// </summary>
        internal static string Err_AmbigousOption {
            get {
                return ResourceManager.GetString("Err_AmbigousOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A single valid machine type compatible with the input type library must be specified..
        /// </summary>
        internal static string Err_BadMachineSwitch {
            get {
                return ResourceManager.GetString("Err_BadMachineSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating an app domain to perform the conversion..
        /// </summary>
        internal static string Err_CannotCreateAppDomain {
            get {
                return ResourceManager.GetString("Err_CannotCreateAppDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load the RemoteTlbImp type required to perform the conversion..
        /// </summary>
        internal static string Err_CannotCreateRemoteTlbImp {
            get {
                return ResourceManager.GetString("Err_CannotCreateRemoteTlbImp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find type &apos;{0}&apos; in &apos;{1}&apos;. There could be a mismatch between the referenced assembly and the type library..
        /// </summary>
        internal static string Err_CanotFindReferencedType {
            get {
                return ResourceManager.GetString("Err_CanotFindReferencedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library &apos;{0}&apos; was exported from a CLR assembly and cannot be re-imported as a CLR assembly..
        /// </summary>
        internal static string Err_CircularImport {
            get {
                return ResourceManager.GetString("Err_CircularImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following error occurred while trying to open file {0}: {1} - {2}.
        /// </summary>
        internal static string Err_ErrorWhileOpenningFile {
            get {
                return ResourceManager.GetString("Err_ErrorWhileOpenningFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly for referenced type library, &apos;{0}&apos;, will not be imported since it would overwrite existing assembly &apos;{1}&apos;..
        /// </summary>
        internal static string Err_ExistingAsmOverwrittenByRefAsm {
            get {
                return ResourceManager.GetString("Err_ExistingAsmOverwrittenByRefAsm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly for referenced type library, &apos;{0}&apos;, will not be imported since it would overwrite existing file &apos;{1}&apos;..
        /// </summary>
        internal static string Err_ExistingFileOverwrittenByRefAsm {
            get {
                return ResourceManager.GetString("Err_ExistingFileOverwrittenByRefAsm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tlbimp has encountered a fatal error while importing type &apos;{0}&apos;..
        /// </summary>
        internal static string Err_FatalErrorInConversion_Named {
            get {
                return ResourceManager.GetString("Err_FatalErrorInConversion_Named", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tlbimp has encountered a fatal error while importing type..
        /// </summary>
        internal static string Err_FatalErrorInConversion_Unnamed {
            get {
                return ResourceManager.GetString("Err_FatalErrorInConversion_Unnamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate input type library: &apos;{0}&apos;.
        /// </summary>
        internal static string Err_InputFileNotFound {
            get {
                return ResourceManager.GetString("Err_InputFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input file &apos;{0}&apos; is not a valid type library..
        /// </summary>
        internal static string Err_InputFileNotValidTypeLib {
            get {
                return ResourceManager.GetString("Err_InputFileNotValidTypeLib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extension for the output assembly must be .dll..
        /// </summary>
        internal static string Err_InvalidExtension {
            get {
                return ResourceManager.GetString("Err_InvalidExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified machine option &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string Err_InvalidMachine {
            get {
                return ResourceManager.GetString("Err_InvalidMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output directory does not exist..
        /// </summary>
        internal static string Err_InvalidOutputDirectory {
            get {
                return ResourceManager.GetString("Err_InvalidOutputDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid strong name parameters specified..
        /// </summary>
        internal static string Err_InvalidStrongName {
            get {
                return ResourceManager.GetString("Err_InvalidStrongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified transformation option &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string Err_InvalidTransform {
            get {
                return ResourceManager.GetString("Err_InvalidTransform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version is invalid. .
        /// </summary>
        internal static string Err_InvalidVersion {
            get {
                return ResourceManager.GetString("Err_InvalidVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encountered multiple versions of the assembly with GUID &apos;{0}&apos;.  Try pre-importing one of these assemblies..
        /// </summary>
        internal static string Err_MultipleVersionsOfAssembly {
            get {
                return ResourceManager.GetString("Err_MultipleVersionsOfAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No input file has been specified..
        /// </summary>
        internal static string Err_NoInputFile {
            get {
                return ResourceManager.GetString("Err_NoInputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced type library &apos;{0}&apos; does not have a primary interop assembly registered. .
        /// </summary>
        internal static string Err_NoPIARegistered {
            get {
                return ResourceManager.GetString("Err_NoPIARegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The /{0} option does not require a value..
        /// </summary>
        internal static string Err_NoValueRequired {
            get {
                return ResourceManager.GetString("Err_NoValueRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output file name cannot specify a directory..
        /// </summary>
        internal static string Err_OutputCannotBeDirectory {
            get {
                return ResourceManager.GetString("Err_OutputCannotBeDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file name, created from Type Library name, would be too long:
        ///{0}.
        /// </summary>
        internal static string Err_OutputFileNameTooLong {
            get {
                return ResourceManager.GetString("Err_OutputFileNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file would overwrite input file..
        /// </summary>
        internal static string Err_OutputWouldOverwriteInput {
            get {
                return ResourceManager.GetString("Err_OutputWouldOverwriteInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tlbimp has encountered a permission problem. Please make sure you have necessary permission using Tlbimp..
        /// </summary>
        internal static string Err_PermissionException {
            get {
                return ResourceManager.GetString("Err_PermissionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary interop assemblies must be strongly named. This can be accomplished by using either the /publickey, /keyfile or /keycontainer options..
        /// </summary>
        internal static string Err_PIAMustBeStrongNamed {
            get {
                return ResourceManager.GetString("Err_PIAMustBeStrongNamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly for referenced type library, &apos;{0}&apos;, will not be imported since it would be overwritten by the output assembly &apos;{1}&apos;..
        /// </summary>
        internal static string Err_RefAsmOverwrittenByOutput {
            get {
                return ResourceManager.GetString("Err_RefAsmOverwrittenByOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load referenced assembly: &apos;{0}&apos;.
        /// </summary>
        internal static string Err_RefAssemblyCantLoad {
            get {
                return ResourceManager.GetString("Err_RefAssemblyCantLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced assembly &apos;{0}&apos; is not a valid assembly..
        /// </summary>
        internal static string Err_RefAssemblyInvalid {
            get {
                return ResourceManager.GetString("Err_RefAssemblyInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate referenced assembly &apos;{0}&apos; or one of its dependencies..
        /// </summary>
        internal static string Err_RefAssemblyNotFound {
            get {
                return ResourceManager.GetString("Err_RefAssemblyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Referenced assembly &apos;{0}&apos; is not a primary interop assembly..
        /// </summary>
        internal static string Err_ReferencedPIANotPIA {
            get {
                return ResourceManager.GetString("Err_ReferencedPIANotPIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate specified reference: &apos;{0}&apos;..
        /// </summary>
        internal static string Err_ReferenceNotFound {
            get {
                return ResourceManager.GetString("Err_ReferenceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library &apos;{0}&apos; is not in the list of references..
        /// </summary>
        internal static string Err_RefNotInList {
            get {
                return ResourceManager.GetString("Err_RefNotInList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load referenced type library. Please specify dependent type libraries using /tlbreference..
        /// </summary>
        internal static string Err_RefTlbCantLoad {
            get {
                return ResourceManager.GetString("Err_RefTlbCantLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot resolve type library &apos;{0}, {1}, {{{2}}}&apos;. Please specify the full path name to this type library using /tlbreference and try again..
        /// </summary>
        internal static string Err_RefTypeLibMissing {
            get {
                return ResourceManager.GetString("Err_RefTypeLibMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly &apos;{0}&apos; which is registered as the primary interop assembly for type library &apos;{0}&apos; is not actually a primary interop assembly..
        /// </summary>
        internal static string Err_RegisteredPIANotPIA {
            get {
                return ResourceManager.GetString("Err_RegisteredPIANotPIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The usage of silent and silence is mutually exclusive..
        /// </summary>
        internal static string Err_SilentExclusive {
            get {
                return ResourceManager.GetString("Err_SilentExclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one key pair/public key may be specified on the command line..
        /// </summary>
        internal static string Err_TooManyKeys {
            get {
                return ResourceManager.GetString("Err_TooManyKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred while opening type library:
        ///{0}.
        /// </summary>
        internal static string Err_TypeLibLoad {
            get {
                return ResourceManager.GetString("Err_TypeLibLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following exceptions were thrown while loading the types in the assembly:
        ///.
        /// </summary>
        internal static string Err_TypeLoadExceptions {
            get {
                return ResourceManager.GetString("Err_TypeLoadExceptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type library importer encountered an unexpected exception: {0} - {1}.
        /// </summary>
        internal static string Err_UnexpectedException {
            get {
                return ResourceManager.GetString("Err_UnexpectedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown option: /{0}.
        /// </summary>
        internal static string Err_UnknownOption {
            get {
                return ResourceManager.GetString("Err_UnknownOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown strictref option: &apos;{0}&apos;.
        /// </summary>
        internal static string Err_UnknownStrictRefOpt {
            get {
                return ResourceManager.GetString("Err_UnknownStrictRefOpt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The /{0} option requires a value..
        /// </summary>
        internal static string Err_ValueRequired {
            get {
                return ResourceManager.GetString("Err_ValueRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reference lookup for a type library failed because the assembly &apos;{0}&apos; with TypeLib GUID &apos;{1}&apos; and version &apos;{2}.{3}&apos; does not match the type library &apos;{4}&apos; with TypeLib GUID &apos;{5}&apos; and version &apos;{6}.{7}&apos;..
        /// </summary>
        internal static string Msg_AsmRefLookupMatchProblem {
            get {
                return ResourceManager.GetString("Msg_AsmRefLookupMatchProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly &apos;{0}&apos; loaded..
        /// </summary>
        internal static string Msg_AssemblyLoaded {
            get {
                return ResourceManager.GetString("Msg_AssemblyLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly &apos;{0}&apos; resolved..
        /// </summary>
        internal static string Msg_AssemblyResolved {
            get {
                return ResourceManager.GetString("Msg_AssemblyResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto importing &apos;{0}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string Msg_AutoImportingTypeLib {
            get {
                return ResourceManager.GetString("Msg_AutoImportingTypeLib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft (R) .NET Framework Type Library to Assembly Converter {0}
        ///Copyright (C) Microsoft Corporation.  All rights reserved.
        ///.
        /// </summary>
        internal static string Msg_Copyright {
            get {
                return ResourceManager.GetString("Msg_Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception[{0}] = {1} - {2}.
        /// </summary>
        internal static string Msg_DisplayException {
            get {
                return ResourceManager.GetString("Msg_DisplayException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception[{0}] ==&gt;&gt; {1} - {2}.
        /// </summary>
        internal static string Msg_DisplayNestedException {
            get {
                return ResourceManager.GetString("Msg_DisplayNestedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property &apos;{0}&apos; of type &apos;{1}&apos; is omitted..
        /// </summary>
        internal static string Msg_PropertyIsOmitted {
            get {
                return ResourceManager.GetString("Msg_PropertyIsOmitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reference to type library &apos;{0}&apos; has been resolved to user specified assembly &apos;{1}&apos;..
        /// </summary>
        internal static string Msg_RefFoundInAsmRefList {
            get {
                return ResourceManager.GetString("Msg_RefFoundInAsmRefList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolved referenced file &apos;{0}&apos; to file &apos;{1}&apos;..
        /// </summary>
        internal static string Msg_ResolvedFile {
            get {
                return ResourceManager.GetString("Msg_ResolvedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reference to type library &apos;{0}&apos; has been resolved to primary interop assembly &apos;{1}&apos;..
        /// </summary>
        internal static string Msg_ResolvedRefToPIA {
            get {
                return ResourceManager.GetString("Msg_ResolvedRefToPIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolving reference to type library &apos;{0}&apos;..
        /// </summary>
        internal static string Msg_ResolvingRef {
            get {
                return ResourceManager.GetString("Msg_ResolvingRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; imported..
        /// </summary>
        internal static string Msg_TypeInfoImported {
            get {
                return ResourceManager.GetString("Msg_TypeInfoImported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library imported to {0}.
        /// </summary>
        internal static string Msg_TypeLibImported {
            get {
                return ResourceManager.GetString("Msg_TypeLibImported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolved type library mismatch: expecting &apos;{0}, {1}, {{{2}}}&apos; but found &apos;{3}, {4}, {{{5}}}&apos; at &apos;{6}&apos;..
        /// </summary>
        internal static string Msg_TypeLibRefMismatch {
            get {
                return ResourceManager.GetString("Msg_TypeLibRefMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolved type library &apos;{0}, {1}, {{{2}}}&apos; at &apos;{3}&apos;..
        /// </summary>
        internal static string Msg_TypeLibRefResolved {
            get {
                return ResourceManager.GetString("Msg_TypeLibRefResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolved type library &apos;{0}, {1}, {{{2}}}&apos; at &apos;{3}&apos; from registry..
        /// </summary>
        internal static string Msg_TypeLibRefResolvedInRegistry {
            get {
                return ResourceManager.GetString("Msg_TypeLibRefResolvedInRegistry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot resolve type library &apos;{0}, {1}, {{{2}}}&apos;..
        /// </summary>
        internal static string Msg_TypeLibRefResolveFailed {
            get {
                return ResourceManager.GetString("Msg_TypeLibRefResolveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax: TlbImp TypeLibName [Options]
        ///Options:.
        /// </summary>
        internal static string Msg_Usage_00 {
            get {
                return ResourceManager.GetString("Msg_Usage_00", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /out:FileName            File name of assembly to be produced.
        /// </summary>
        internal static string Msg_Usage_01 {
            get {
                return ResourceManager.GetString("Msg_Usage_01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /namespace:Namespace     Namespace of the assembly to be produced.
        /// </summary>
        internal static string Msg_Usage_02 {
            get {
                return ResourceManager.GetString("Msg_Usage_02", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /asmversion:Version      Version number of the assembly to be produced.
        /// </summary>
        internal static string Msg_Usage_03 {
            get {
                return ResourceManager.GetString("Msg_Usage_03", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /reference:FileName      File name of assembly to use to resolve references.
        /// </summary>
        internal static string Msg_Usage_04 {
            get {
                return ResourceManager.GetString("Msg_Usage_04", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /tlbreference:FileName   File name of typelib to use to resolve references.
        /// </summary>
        internal static string Msg_Usage_05 {
            get {
                return ResourceManager.GetString("Msg_Usage_05", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /publickey:FileName      File containing strong name public key.
        /// </summary>
        internal static string Msg_Usage_06 {
            get {
                return ResourceManager.GetString("Msg_Usage_06", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /keyfile:FileName        File containing strong name key pair.
        /// </summary>
        internal static string Msg_Usage_07 {
            get {
                return ResourceManager.GetString("Msg_Usage_07", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /keycontainer:FileName   Key container holding strong name key pair.
        /// </summary>
        internal static string Msg_Usage_08 {
            get {
                return ResourceManager.GetString("Msg_Usage_08", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /delaysign               Force strong name delay signing.
        /// </summary>
        internal static string Msg_Usage_09 {
            get {
                return ResourceManager.GetString("Msg_Usage_09", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /product:Product         The name of the product with which this assembly.
        /// </summary>
        internal static string Msg_Usage_10 {
            get {
                return ResourceManager.GetString("Msg_Usage_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              is distributed.
        /// </summary>
        internal static string Msg_Usage_11 {
            get {
                return ResourceManager.GetString("Msg_Usage_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /productversion:Version  The version of the product with which this.
        /// </summary>
        internal static string Msg_Usage_12 {
            get {
                return ResourceManager.GetString("Msg_Usage_12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              assembly is distributed.
        /// </summary>
        internal static string Msg_Usage_13 {
            get {
                return ResourceManager.GetString("Msg_Usage_13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /company:Company         The name of the company that produced this.
        /// </summary>
        internal static string Msg_Usage_14 {
            get {
                return ResourceManager.GetString("Msg_Usage_14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              assembly.
        /// </summary>
        internal static string Msg_Usage_15 {
            get {
                return ResourceManager.GetString("Msg_Usage_15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /copyright:Copyright     Describes all copyright notices, trademarks, and.
        /// </summary>
        internal static string Msg_Usage_16 {
            get {
                return ResourceManager.GetString("Msg_Usage_16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              registered trademarks that apply to this assembly.
        /// </summary>
        internal static string Msg_Usage_17 {
            get {
                return ResourceManager.GetString("Msg_Usage_17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /trademark:Trademark     Describes all trademarks and registered trademarks.
        /// </summary>
        internal static string Msg_Usage_18 {
            get {
                return ResourceManager.GetString("Msg_Usage_18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              that apply to this assembly.
        /// </summary>
        internal static string Msg_Usage_19 {
            get {
                return ResourceManager.GetString("Msg_Usage_19", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /unsafe                  Produce interfaces without runtime security checks.
        /// </summary>
        internal static string Msg_Usage_20 {
            get {
                return ResourceManager.GetString("Msg_Usage_20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /noclassmembers          Prevents TlbImp from adding members to classes.
        /// </summary>
        internal static string Msg_Usage_21 {
            get {
                return ResourceManager.GetString("Msg_Usage_21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /nologo                  Prevents TlbImp from displaying logo.
        /// </summary>
        internal static string Msg_Usage_22 {
            get {
                return ResourceManager.GetString("Msg_Usage_22", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /silent                  Suppresses all output except for errors.
        /// </summary>
        internal static string Msg_Usage_23 {
            get {
                return ResourceManager.GetString("Msg_Usage_23", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /silence:WarningNumber   Suppresses output for the given warning (Can not .
        /// </summary>
        internal static string Msg_Usage_24 {
            get {
                return ResourceManager.GetString("Msg_Usage_24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              be used with /silent).
        /// </summary>
        internal static string Msg_Usage_25 {
            get {
                return ResourceManager.GetString("Msg_Usage_25", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /verbose                 Displays extra information.
        /// </summary>
        internal static string Msg_Usage_26 {
            get {
                return ResourceManager.GetString("Msg_Usage_26", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /primary                 Produce a primary interop assembly.
        /// </summary>
        internal static string Msg_Usage_27 {
            get {
                return ResourceManager.GetString("Msg_Usage_27", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /sysarray                Import SAFEARRAY as System.Array.
        /// </summary>
        internal static string Msg_Usage_28 {
            get {
                return ResourceManager.GetString("Msg_Usage_28", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /machine:MachineType     Create an assembly for the specified machine type.
        /// </summary>
        internal static string Msg_Usage_29 {
            get {
                return ResourceManager.GetString("Msg_Usage_29", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /transform:TransformName Perform the specified transformation.
        /// </summary>
        internal static string Msg_Usage_30 {
            get {
                return ResourceManager.GetString("Msg_Usage_30", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /strictref               Only use assemblies specified using /reference and.
        /// </summary>
        internal static string Msg_Usage_31 {
            get {
                return ResourceManager.GetString("Msg_Usage_31", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              registered PIAs.
        /// </summary>
        internal static string Msg_Usage_32 {
            get {
                return ResourceManager.GetString("Msg_Usage_32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /strictref:nopia         Only use assemblies specified using /reference and.
        /// </summary>
        internal static string Msg_Usage_33 {
            get {
                return ResourceManager.GetString("Msg_Usage_33", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              ignore PIAs.
        /// </summary>
        internal static string Msg_Usage_34 {
            get {
                return ResourceManager.GetString("Msg_Usage_34", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /v2                      Enable new behaviors in TlbImp v2. Please note.
        /// </summary>
        internal static string Msg_Usage_35 {
            get {
                return ResourceManager.GetString("Msg_Usage_35", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              that using this switch may break your existing.
        /// </summary>
        internal static string Msg_Usage_36 {
            get {
                return ResourceManager.GetString("Msg_Usage_36", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              application..
        /// </summary>
        internal static string Msg_Usage_37 {
            get {
                return ResourceManager.GetString("Msg_Usage_37", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /preservesig             Stop applying the [out, retval] parameter.
        /// </summary>
        internal static string Msg_Usage_38 {
            get {
                return ResourceManager.GetString("Msg_Usage_38", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              transformation, and add PreserveSigAttribute to.
        /// </summary>
        internal static string Msg_Usage_39 {
            get {
                return ResourceManager.GetString("Msg_Usage_39", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              methods in interfaces, except for disp-only.
        /// </summary>
        internal static string Msg_Usage_40 {
            get {
                return ResourceManager.GetString("Msg_Usage_40", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              interfaces. The properties from non-dispatch.
        /// </summary>
        internal static string Msg_Usage_41 {
            get {
                return ResourceManager.GetString("Msg_Usage_41", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              interfaces will be omitted..
        /// </summary>
        internal static string Msg_Usage_42 {
            get {
                return ResourceManager.GetString("Msg_Usage_42", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     /? or /help              Display this usage message.
        /// </summary>
        internal static string Msg_Usage_43 {
            get {
                return ResourceManager.GetString("Msg_Usage_43", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string Msg_Usage_44 {
            get {
                return ResourceManager.GetString("Msg_Usage_44", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly version must be specified as: Major.Minor.Build.Revision..
        /// </summary>
        internal static string Msg_Usage_45 {
            get {
                return ResourceManager.GetString("Msg_Usage_45", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string Msg_Usage_46 {
            get {
                return ResourceManager.GetString("Msg_Usage_46", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple reference assemblies can be specified by using the /reference option.
        /// </summary>
        internal static string Msg_Usage_47 {
            get {
                return ResourceManager.GetString("Msg_Usage_47", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to multiple times..
        /// </summary>
        internal static string Msg_Usage_48 {
            get {
                return ResourceManager.GetString("Msg_Usage_48", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string Msg_Usage_49 {
            get {
                return ResourceManager.GetString("Msg_Usage_49", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported machine types:.
        /// </summary>
        internal static string Msg_Usage_50 {
            get {
                return ResourceManager.GetString("Msg_Usage_50", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     X86.
        /// </summary>
        internal static string Msg_Usage_51 {
            get {
                return ResourceManager.GetString("Msg_Usage_51", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     X64.
        /// </summary>
        internal static string Msg_Usage_52 {
            get {
                return ResourceManager.GetString("Msg_Usage_52", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     Itanium.
        /// </summary>
        internal static string Msg_Usage_53 {
            get {
                return ResourceManager.GetString("Msg_Usage_53", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     Agnostic.
        /// </summary>
        internal static string Msg_Usage_54 {
            get {
                return ResourceManager.GetString("Msg_Usage_54", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string Msg_Usage_55 {
            get {
                return ResourceManager.GetString("Msg_Usage_55", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported transforms:.
        /// </summary>
        internal static string Msg_Usage_56 {
            get {
                return ResourceManager.GetString("Msg_Usage_56", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     SerializableValueClasses Mark all value classes as serializable.
        /// </summary>
        internal static string Msg_Usage_57 {
            get {
                return ResourceManager.GetString("Msg_Usage_57", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     DispRet                  Apply the [out, retval] parameter transformation.
        /// </summary>
        internal static string Msg_Usage_58 {
            get {
                return ResourceManager.GetString("Msg_Usage_58", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                              to methods of disp-only interfaces.
        /// </summary>
        internal static string Msg_Usage_59 {
            get {
                return ResourceManager.GetString("Msg_Usage_59", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string Msg_Usage_60 {
            get {
                return ResourceManager.GetString("Msg_Usage_60", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A resource ID can optionally be appended to the TypeLibName when importing a.
        /// </summary>
        internal static string Msg_Usage_61 {
            get {
                return ResourceManager.GetString("Msg_Usage_61", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type library from a module containing multiple type libraries..
        /// </summary>
        internal static string Msg_Usage_62 {
            get {
                return ResourceManager.GetString("Msg_Usage_62", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  example: TlbImp MyModule.dll\1.
        /// </summary>
        internal static string Msg_Usage_63 {
            get {
                return ResourceManager.GetString("Msg_Usage_63", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string Msg_Usage_64 {
            get {
                return ResourceManager.GetString("Msg_Usage_64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New behaviors in TlbImp version 2 include:.
        /// </summary>
        internal static string Msg_Usage_65 {
            get {
                return ResourceManager.GetString("Msg_Usage_65", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     Convert VARIANT_BOOL in structures to bool..
        /// </summary>
        internal static string Msg_Usage_66 {
            get {
                return ResourceManager.GetString("Msg_Usage_66", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing a type library into a platform agnostic assembly.  This can cause errors if the type library is not truly platform agnostic..
        /// </summary>
        internal static string Wrn_AgnosticAssembly {
            get {
                return ResourceManager.GetString("Wrn_AgnosticAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library importer has encountered a method with an unexpected [out, retval] parameter: &apos;{0}.{1}&apos;..
        /// </summary>
        internal static string Wrn_AmbiguousReturn {
            get {
                return ResourceManager.GetString("Wrn_AmbiguousReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vtable slot number associated with member &apos;{0}&apos; of type &apos;{1}&apos; in type library &apos;{2}&apos; is invalid..
        /// </summary>
        internal static string Wrn_BadVTable {
            get {
                return ResourceManager.GetString("Wrn_BadVTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library importer has encountered an invalid VT type 0x{0:X} when importing type &apos;{1}&apos;..
        /// </summary>
        internal static string Wrn_BadVtType {
            get {
                return ResourceManager.GetString("Wrn_BadVtType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The referenced type library, &apos;{0}&apos;, contains a circular reference, and may not be fully imported..
        /// </summary>
        internal static string Wrn_CircularReference {
            get {
                return ResourceManager.GetString("Wrn_CircularReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface &apos;{0}&apos; is marked as [dual], but does not derive from IDispatch. It will be converted as an IUnknown-derived interface..
        /// </summary>
        internal static string Wrn_DualNotDispatch {
            get {
                return ResourceManager.GetString("Wrn_DualNotDispatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library importer has encountered a duplicate type name: &apos;{0}&apos;..
        /// </summary>
        internal static string Wrn_DuplicateTypeName {
            get {
                return ResourceManager.GetString("Wrn_DuplicateTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library importer encountered a source interface on coclass &apos;{0}&apos; with a NewEnum member.  This is not supported..
        /// </summary>
        internal static string Wrn_EventWithNewEnum {
            get {
                return ResourceManager.GetString("Wrn_EventWithNewEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring IDL custom attribute &apos;{0}&apos; on &apos;{1}&apos; because it cannot be used on an IUnknown interface..
        /// </summary>
        internal static string Wrn_IEnumCustomAttributeOnIUnknown {
            get {
                return ResourceManager.GetString("Wrn_IEnumCustomAttributeOnIUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library has an invalid namespace and cannot be imported (library: &apos;{0}&apos;; namespace: &apos;{1}&apos;)..
        /// </summary>
        internal static string Wrn_InvalidNamespace {
            get {
                return ResourceManager.GetString("Wrn_InvalidNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; is invalid and may only be partially converted..
        /// </summary>
        internal static string Wrn_InvalidTypeInfo {
            get {
                return ResourceManager.GetString("Wrn_InvalidTypeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error converting a type.  The name of the type cannot be determined.  .
        /// </summary>
        internal static string Wrn_InvalidTypeInfo_Unnamed {
            get {
                return ResourceManager.GetString("Wrn_InvalidTypeInfo_Unnamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tlbimp has encountered more than one function or property has dispid of NewEnum. This is not supported..
        /// </summary>
        internal static string Wrn_MultiNewEnum {
            get {
                return ResourceManager.GetString("Wrn_MultiNewEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library importer has encountered a method with multiple [lcid] parameters while importing &apos;{0}.{1}&apos;..
        /// </summary>
        internal static string Wrn_MultipleLcids {
            get {
                return ResourceManager.GetString("Wrn_MultipleLcids", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignoring IDL custom attribute &apos;{0}&apos; on &apos;{1}&apos; because it must be used with an integral value..
        /// </summary>
        internal static string Wrn_NonIntegralCustomAttributeType {
            get {
                return ResourceManager.GetString("Wrn_NonIntegralCustomAttributeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library importer has encountered a source interface containing properties: &apos;{0}&apos;..
        /// </summary>
        internal static string Wrn_NoPropsInEvents {
            get {
                return ResourceManager.GetString("Wrn_NoPropsInEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library importer has encountered an interface not derived from IUnknown: &apos;{0}&apos;..
        /// </summary>
        internal static string Wrn_NotIUnknown {
            get {
                return ResourceManager.GetString("Wrn_NotIUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while importing type: parameter referenced a type library that is not available (type: &apos;{0}&apos;; parameter: &apos;{1}&apos;; method: &apos;{2}&apos;)..
        /// </summary>
        internal static string Wrn_ParamErrorNamed {
            get {
                return ResourceManager.GetString("Wrn_ParamErrorNamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while importing type: parameter referenced a type library that is not available (type: &apos;{0}&apos;; parameter: &apos;{1}&apos;; method: &apos;{2}&apos;)..
        /// </summary>
        internal static string Wrn_ParamErrorUnnamed {
            get {
                return ResourceManager.GetString("Wrn_ParamErrorUnnamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary interop assembly &apos;{0}&apos; is already registered for type library &apos;{1}&apos;..
        /// </summary>
        internal static string Wrn_PIARegisteredForTlb {
            get {
                return ResourceManager.GetString("Wrn_PIARegisteredForTlb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type library importer encountered a property getter &apos;{0}&apos; on type &apos;{1}&apos; without a valid return type.  The importer will attempt to import this property as a method instead..
        /// </summary>
        internal static string Wrn_PropgetWithoutReturn {
            get {
                return ResourceManager.GetString("Wrn_PropgetWithoutReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one of the arguments for &apos;{0}.{1}&apos; cannot be marshaled by the runtime marshaler.  Such arguments will therefore be passed as a pointer and may require unsafe code to manipulate..
        /// </summary>
        internal static string Wrn_UnconvertableArgs {
            get {
                return ResourceManager.GetString("Wrn_UnconvertableArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type library importer could not convert the signature for the member &apos;{0}.{1}&apos;..
        /// </summary>
        internal static string Wrn_UnconvertableField {
            get {
                return ResourceManager.GetString("Wrn_UnconvertableField", resourceCulture);
            }
        }
    }
}
